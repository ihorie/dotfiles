#!/usr/bin/env bash
# .bashrc_horie
# Author: Issei Horie <horie7188@gmail.com>
# Source: https://github.com/ihorie/dotfiles

# Preamble ----------------------------------------------------------
#  _____________________
#  | Thanks for visit! |
#  |___________________| 
#        \   ^__^
#         \  (oo)\_______
#            (__)\       )\/\
#                ||----w |
#                ||     ||
#

#------------
# info
#------------
os=`uname`
window_manager=`echo $DESKTOP_SESSION`

#-------------------------------------------------------------------
# Basic settings
#-------------------------------------------------------------------
umask 022
unset LANG
unset LANGUAGE
alias bashrc="source ~/.bashrc"
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias path='echo -e ${PATH//:/\\n}'
alias g='git'
alias c='cargo'
shopt -s autocd
shopt -s no_empty_cmd_completion
shopt -s checkwinsize
PATH="$HOME/bin:$PATH"

#------------------------------------------------------------------
# History options
#------------------------------------------------------------------
HISTCONTROL=ignoreboth
HISTSIZE=100000
HISTFILESIZE=2000000
shopt -s histappend

#------------------
# Vim settings
#-----------------
alias vi="vim"

#-----------------
# Emacs settings
#-----------------
if [ "$os" == "Darwin" ]; then
  alias e="emacs"
else
  alias e="emacs -nw"
fi

#-------------
# ls aliases
# ------------
alias l='ls -CFlh'
alias ll='ls -alh'
alias la='ls -A'
alias lk='ls -lSr'         # Sort by size, biggest last.
alias lt='ls -ltr'         # Sort by date, most recent last
alias lx='ls -lXB'         # Sort by extension.
alias lc='ls -ltcr'        # Sort by/show change time, most recent last.
alias lu='ls -ltur'        # Sort by/show access time, most recent last.

#----------------------------
# Tailoring 'less'
#----------------------------
# LESS man page colors
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

#-------------------------------------
# extract archives
#-------------------------------------
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)    tar xvjf $1           ;;
      *.tar.gz)     tar xvzf $1           ;;
      *.bz2)        bunzip2 $1            ;;
      *.rar)        unrar x $1            ;;
      *.gz)         gunzip $1             ;;
      *.tar)        tar xvf $1            ;;
      *.tbz2)       tar xvjf $1           ;;
      *.tgz)        tar xvzf $1           ;;
      *.xz)         xz -dv $1 | tar xfv - ;;
      *.zip)        unzip $1              ;;
      *.Z)          uncompress $1         ;;
      *.7z)         7z x $1               ;;
      *)            echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

#--------------------------------------------------------------------
# Takes json on stdin and prints the value of a given path on stdout.
#--------------------------------------------------------------------
json_val() {
  [[ -z "$1" ]] && printf "Usage: json_val <path>\n" && return 10

  python -c 'import sys; import json; \
    j = json.loads(sys.stdin.read()); \
    print j'$1';'
}

#---------------------------------------------------------------
# Returns the public/internet visible IP address of the system.
#---------------------------------------------------------------
whats_my_public_ip() {
   curl --silent 'https://jsonip.com/' | json_val '["ip"]'
}

#---------------------------------------------------
# Check if CPU has hardware virtualization support
#---------------------------------------------------
has_hardware_virtualization_support() {
  egrep -c '(svm|vmx)' /proc/cpuinfo;
}

#--------------------------------------
# Show specific line
#--------------------------------------
cat-line () {
  head -n $3 $1 | tail -n `expr $3 - $2 + 1`
}

#--------------------------------------------------------
# colored ls
#--------------------------------------------------------
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias grep='grep -n --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
else
  export CLICOLOR=1
  export LSCOLORS=gxFxCxDxcxegedabagaced
fi

# --------------------
# Color definitions
# --------------------
# Normal Colors
Black='\e[0;30m'
Red='\e[0;31m'
Green='\e[0;32m'
Yellow='\e[0;32m'
Blue='\e[0;34m'
Purple='\e[0;35m'
Cyan='\e[0;36m'
White='\e[0;37m'

# Bold
BBlack='\e[1;30m'
BRed='\e[1;31m'
BGreen='\e[1;32m'
BYellow='\e[1;35m'
BCyan='\e[1;36m'
BWhite='\e[1;37m'

# Background
On_Black='\e[40m'
On_Red='\e[41m'
On_Green='\e[42m'
On_Yellow='\e[43m'
On_Blue='\e[44m'
On_Purple='\e[45m'
On_Cyan='\e[46m'
On_White='\e[47m'

NC="\e[m"

# ----------------
# prompt settings
# ----------------
if [ "$TERM" == "xterm-256color" ]; then
  if [ "$os" == "Darwin" ]; then
    RESET="\[\017\]"
    NORMAL="\[\033[0m\]"
    RED="\e[38;5;161m"
    YELLOW="\e[38;5;229m"
    GREEN="\e[38;5;66m"
    ON_GREEN="\e[42m"
    SMILEY=":)"
    FROWNY="${RED}:(${NORMAL}"
    SELECT="if [ \$? = 0 ]; then echo \"${SMILEY}\"; else echo \"${FROWNY}\"; fi"
    PS1="${RESET}${GREEN}\u@\:\w${NORMAL} \`${SELECT}\` \n\$${YELLOW}${NORMAL} "
  else
    RESET="\[\017\]"
    NORMAL="\[\033[0m\]"
    RED="\[\033[38;2;255;160;160m\]"
    GREEN="\[\033[38;2;165;230;170m\]"
    YELLOW="\[\033[38;2;255;255;150m\]"
    WHITE="\[\033[37;1m\]"
    SMILEY="${WHITE}:)${NORMAL}"
    FROWNY="${RED}:(${NORMAL}"
    SELECT="if [ \$? = 0 ]; then echo \"${SMILEY}\"; else echo \"${FROWNY}\"; fi"

    if [[ "$STY" != "" ]]; then
      # screen
      PS1="${RESET}${GREEN}\u@\h:\w${NORMAL} \`${SELECT}\` \n${YELLOW}>${NORMAL} "
    elif [[ "SSH_CLIENT" != "" ]]; then
      # SSH
      PS1="${RESET}${GREEN}\u@\h:\w${NORMAL} \`${SELECT}\` \n${YELLOW}>${NORMAL} "
    else
      PS1="${RESET}${GREEN}\u@\h:\w${NORMAL} \`${SELECT}\` \n${YELLOW}>${NORMAL} "
    fi
  fi
else    
  RESET="\[\017\]"
  SMILEY=":)"
  FROWNY=":("
  SELECT="if [ \$? = 0 ]; then echo \"${SMILEY}\"; else echo \"${FROWNY}\"; fi"
  PS1="${RESET}\u@\h:\w \`${SELECT}\` \n\$ "
fi

# memo

# gifsicle -i anim.gif -O3 --colors 256 -o anim-opt.gif
